<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:jee="http://www.springframework.org/schema/jee"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="
   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
   http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">
   
   <!-- This configuration create db connection pool -->
	<bean id="pooledDataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<property name="url" value="jdbc:sqlserver://localhost:1433;DatabaseName=home;responseBuffering=adaptive" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<property name="initialSize" value="5" />
		<property name="maxIdle" value="50" />
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="SELECT 1+1" />
	</bean>
	
	<!-- jdbcTemplates do all the connection management and all other standard actions -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg>
			<ref bean="pooledDataSource" />
		</constructor-arg>
	</bean>
	
	<!-- This is the bean that handles transactions -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="pooledDataSource"/>
	</bean>


	<!-- Within the context of AOP programming this is the advice bean. The job(actual implementation) is done by ref bean="transactionManager"-->
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
		
		 <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
	</bean>
	
	<!-- This is the proxybean which is created by applying the advice to the "PersonService" point-cut -->
    <bean id="personServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <value>com.rahal.service.PersonService</value>
        </property>
        
        <property name="interceptorNames">
            <list>
        		<value>transactionInterceptor</value>
        		<value>personService</value>
      		</list>
        </property>
    </bean>
    
	<!-- create personService by injecting personDAO and personAddressDAO-->   
    <bean id="personService" class="com.rahal.service.impl.PersonServiceImpl">
    	<property name="personDAO">
            <ref bean="personDAO"/>
        </property>
        <property name="addressDAO">
            <ref bean="personAddressDAO"/>
        </property>
    </bean>
    
    <!-- create personDAO by injecting jdbcTemplate -->
    <bean id="personDAO" class="com.rahal.dao.impl.PersonDAOJDBCImpl">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate"/>
        </property>
    </bean>
    
     <!-- create personAddressDAO by injecting jdbcTemplate -->
    <bean id="personAddressDAO" class="com.rahal.dao.impl.PersonAddressDAOJDBCImpl">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate"/>
        </property>
    </bean>
   
</beans>